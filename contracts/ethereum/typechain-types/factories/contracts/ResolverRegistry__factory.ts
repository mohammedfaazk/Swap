/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  ResolverRegistry,
  ResolverRegistryInterface,
} from "../../contracts/ResolverRegistry";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "resolver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "oldReputation",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newReputation",
        type: "uint256",
      },
    ],
    name: "ReputationUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "resolver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "stake",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "reputation",
        type: "uint256",
      },
    ],
    name: "ResolverRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "resolver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "ResolverSlashed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [],
    name: "MAX_SLASHING",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIN_STAKE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "REPUTATION_DECAY_PERIOD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "activeResolvers",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getActiveResolverCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "resolver",
        type: "address",
      },
    ],
    name: "getResolverInfo",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "stake",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "reputation",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalVolume",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "successRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "avgResponseTime",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "registrationTime",
            type: "uint256",
          },
        ],
        internalType: "struct IResolver.ResolverInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
    ],
    name: "getTopResolvers",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "resolver",
        type: "address",
      },
    ],
    name: "isActiveResolver",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "minStake",
        type: "uint256",
      },
    ],
    name: "registerResolver",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "resolverSlashings",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "resolverStakes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "resolvers",
    outputs: [
      {
        internalType: "uint256",
        name: "stake",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reputation",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalVolume",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "successRate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "avgResponseTime",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "active",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "registrationTime",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "resolver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "slashResolver",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSlashed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalStaked",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "resolver",
        type: "address",
      },
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "responseTime",
        type: "uint256",
      },
    ],
    name: "updateReputation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a3361002d565b600180556002805460ff1916905561007d565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6117c08061008c6000396000f3fe6080604052600436106101445760003560e01c80639f3e1819116100b6578063cc18a8171161006f578063cc18a8171461047c578063d0e08c8e1461048f578063e3bcf603146104bc578063ecd7a89c146104d8578063f2fde38b14610505578063ff370a401461052557600080fd5b80639f3e1819146102fc578063a201bbdd1461031c578063a4e5b2ce14610332578063a59c548014610352578063b93793e9146103ca578063cb1c2b5c1461046057600080fd5b80635c975abb116101085780635c975abb1461024f578063715018a614610273578063817b1cd2146102885780638257886d1461029e5780638456cb59146102b55780638da5cb5b146102ca57600080fd5b806308ee0005146101a957806325d5971f146101c95780633833db77146101e95780633f4ba83a1461020d5780633fb135e91461022257600080fd5b366101a4573360009081526003602052604090206005015460ff16156101a25733600090815260046020526040812080543492906101839084906114ff565b92505081905550346008600082825461019c91906114ff565b90915550505b005b600080fd5b3480156101b557600080fd5b506101a26101c436600461152e565b610545565b3480156101d557600080fd5b506101a26101e43660046115b5565b610775565b3480156101f557600080fd5b506006545b6040519081526020015b60405180910390f35b34801561021957600080fd5b506101a26108eb565b34801561022e57600080fd5b5061024261023d3660046115b5565b6108fd565b60405161020491906115ce565b34801561025b57600080fd5b5060025460ff165b6040519015158152602001610204565b34801561027f57600080fd5b506101a26109cd565b34801561029457600080fd5b506101fa60085481565b3480156102aa57600080fd5b506101fa62278d0081565b3480156102c157600080fd5b506101a26109df565b3480156102d657600080fd5b506000546001600160a01b03165b6040516001600160a01b039091168152602001610204565b34801561030857600080fd5b506102e46103173660046115b5565b6109ef565b34801561032857600080fd5b506101fa60095481565b34801561033e57600080fd5b5061026361034d36600461161b565b610a19565b34801561035e57600080fd5b5061037261036d36600461161b565b610a6a565b6040516102049190600060e082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a0830151151560a083015260c083015160c083015292915050565b3480156103d657600080fd5b506104296103e536600461161b565b600360208190526000918252604090912080546001820154600283015493830154600484015460058501546006909501549395929492939192909160ff9091169087565b6040805197885260208801969096529486019390935260608501919091526080840152151560a083015260c082015260e001610204565b34801561046c57600080fd5b506101fa670de0b6b3a764000081565b6101a261048a3660046115b5565b610b1c565b34801561049b57600080fd5b506101fa6104aa36600461161b565b60046020526000908152604090205481565b3480156104c857600080fd5b506101fa6706f05b59d3b2000081565b3480156104e457600080fd5b506101fa6104f336600461161b565b60056020526000908152604090205481565b34801561051157600080fd5b506101a261052036600461161b565b610d58565b34801561053157600080fd5b506101a261054036600461163d565b610dce565b61054d610f4a565b610555610fa4565b6001600160a01b03841660009081526003602052604090206005015460ff166105bb5760405162461bcd60e51b81526020600482015260136024820152725265736f6c766572206e6f742061637469766560681b60448201526064015b60405180910390fd5b6706f05b59d3b2000083111561060b5760405162461bcd60e51b81526020600482015260156024820152740a6d8c2e6d040c2dadeeadce840e8dede40d0d2ced605b1b60448201526064016105b2565b6001600160a01b0384166000908152600460205260409020548311156106435760405162461bcd60e51b81526004016105b290611681565b6001600160a01b0384166000908152600460205260408120805485929061066b9084906116ad565b90915550506001600160a01b038416600090815260056020526040812080548592906106989084906114ff565b9250508190555082600960008282546106b191906114ff565b90915550506001600160a01b038416600090815260046020526040902054670de0b6b3a764000011156106e7576106e784610ffd565b600080546040516001600160a01b039091169185156108fc02918691818181858888f19350505050158015610720573d6000803e3d6000fd5b50836001600160a01b03167fed9e5190e975aa4403c276297e605b40d5a99683c8d2482166c8efbd1a89265f84848460405161075e939291906116c0565b60405180910390a261076f60018055565b50505050565b61077d610fa4565b336000908152600460205260409020548111156107ac5760405162461bcd60e51b81526004016105b290611681565b33600090815260046020526040902054670de0b6b3a7640000906107d19083906116ad565b1015806107ec57503360009081526004602052604090205481145b61084c5760405162461bcd60e51b815260206004820152602b60248201527f4d757374206d61696e7461696e206d696e696d756d207374616b65206f72207760448201526a1a5d1a191c985dc8185b1b60aa1b60648201526084016105b2565b336000908152600460205260408120805483929061086b9084906116ad565b92505081905550806008600082825461088491906116ad565b909155505033600090815260046020526040902054670de0b6b3a764000011156108b1576108b133610ffd565b604051339082156108fc029083906000818181858888f193505050501580156108de573d6000803e3d6000fd5b506108e860018055565b50565b6108f3610f4a565b6108fb611118565b565b6006546060908211156109105760065491505b60008267ffffffffffffffff81111561092b5761092b6116f6565b604051908082528060200260200182016040528015610954578160200160208202803683370190505b509050600061096161116a565b905060005b848110156109c4578181815181106109805761098061170c565b602002602001015183828151811061099a5761099a61170c565b6001600160a01b0390921660209283029190910190910152806109bc81611722565b915050610966565b50909392505050565b6109d5610f4a565b6108fb60006113cd565b6109e7610f4a565b6108fb61141d565b600681815481106109ff57600080fd5b6000918252602090912001546001600160a01b0316905081565b6001600160a01b03811660009081526003602052604081206005015460ff168015610a6457506001600160a01b038216600090815260046020526040902054670de0b6b3a764000011155b92915050565b610aac6040518060e001604052806000815260200160008152602001600081526020016000815260200160008152602001600015158152602001600081525090565b506001600160a01b0316600090815260036020818152604092839020835160e0810185528154815260018201549281019290925260028101549382019390935290820154606082015260048201546080820152600582015460ff16151560a082015260069091015460c082015290565b610b24610fa4565b610b2c61145a565b670de0b6b3a7640000341015610b545760405162461bcd60e51b81526004016105b290611681565b80341015610b9a5760405162461bcd60e51b815260206004820152601360248201527242656c6f77206d696e696d756d207374616b6560681b60448201526064016105b2565b3360009081526003602052604090206005015460ff1615610bf25760405162461bcd60e51b8152602060048201526012602482015271105b1c9958591e481c9959da5cdd195c995960721b60448201526064016105b2565b6040805160e081018252348082526103e8602080840191825260008486018181526127106060870190815260808701838152600160a089018181524260c08b0190815233875260038089528c88209b518c559851928b0192909255935160028a01559151958801959095559351600480880191909155905160058701805460ff191691151591909117905592516006909501949094555291812082905560088054909190610ca19084906114ff565b9091555050600680546001818101835560008390527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f90910180546001600160a01b031916331790559054610cf691906116ad565b33600081815260076020526040908190209290925590517f289258107f8d76fc7163a6ec26d9ca3ee4eccfc63593bdf70b70de543ccbff5790610d479034906103e890918252602082015260400190565b60405180910390a26108e860018055565b610d60610f4a565b6001600160a01b038116610dc55760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105b2565b6108e8816113cd565b610dd6610f4a565b6001600160a01b0383166000908152600360205260409020600581015460ff16610e385760405162461bcd60e51b81526020600482015260136024820152725265736f6c766572206e6f742061637469766560681b60448201526064016105b2565b60018101548315610e7957600a826001016000828254610e5891906114ff565b909155505060018201546127101015610e745761271060018301555b610ead565b601482600101541115610ea6576014826001016000828254610e9b91906116ad565b90915550610ead9050565b6001828101555b8160040154600003610ec55760048201839055610ef3565b600a8383600401546009610ed9919061173b565b610ee391906114ff565b610eed9190611752565b60048301555b846001600160a01b03167f5b88a2e3fc1a53234357ab78c104df11c33ccfa79886793654565ad70b8afb6e828460010154604051610f3b929190918252602082015260400190565b60405180910390a25050505050565b6000546001600160a01b031633146108fb5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105b2565b600260015403610ff65760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016105b2565b6002600155565b6001600160a01b0381166000908152600360209081526040808320600501805460ff19169055600790915281205460065490919061103d906001906116ad565b90508082146110c55760006006828154811061105b5761105b61170c565b600091825260209091200154600680546001600160a01b03909216925082918590811061108a5761108a61170c565b600091825260208083209190910180546001600160a01b0319166001600160a01b039485161790559290911681526007909152604090208290555b60068054806110d6576110d6611774565b60008281526020808220830160001990810180546001600160a01b03191690559092019092556001600160a01b03949094168152600790935250506040812055565b6111206114a0565b6002805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b60065460609060009067ffffffffffffffff81111561118b5761118b6116f6565b6040519080825280602002602001820160405280156111b4578160200160208202803683370190505b50905060005b60065481101561123157600681815481106111d7576111d761170c565b9060005260206000200160009054906101000a90046001600160a01b03168282815181106112075761120761170c565b6001600160a01b03909216602092830291909101909101528061122981611722565b9150506111ba565b5060005b81518110156113c75760005b816001845161125091906116ad565b61125a91906116ad565b8110156113b45760036000846112718460016114ff565b815181106112815761128161170c565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060010154600360008584815181106112c3576112c361170c565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000206001015410156113a25760008382815181106113095761130961170c565b602002602001015190508382600161132191906114ff565b815181106113315761133161170c565b602002602001015184838151811061134b5761134b61170c565b6001600160a01b039092166020928302919091019091015280846113708460016114ff565b815181106113805761138061170c565b60200260200101906001600160a01b031690816001600160a01b031681525050505b806113ac81611722565b915050611241565b50806113bf81611722565b915050611235565b50919050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61142561145a565b6002805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861114d3390565b60025460ff16156108fb5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016105b2565b60025460ff166108fb5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016105b2565b634e487b7160e01b600052601160045260246000fd5b80820180821115610a6457610a646114e9565b80356001600160a01b038116811461152957600080fd5b919050565b6000806000806060858703121561154457600080fd5b61154d85611512565b935060208501359250604085013567ffffffffffffffff8082111561157157600080fd5b818701915087601f83011261158557600080fd5b81358181111561159457600080fd5b8860208285010111156115a657600080fd5b95989497505060200194505050565b6000602082840312156115c757600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b8181101561160f5783516001600160a01b0316835292840192918401916001016115ea565b50909695505050505050565b60006020828403121561162d57600080fd5b61163682611512565b9392505050565b60008060006060848603121561165257600080fd5b61165b84611512565b92506020840135801515811461167057600080fd5b929592945050506040919091013590565b602080825260129082015271496e73756666696369656e74207374616b6560701b604082015260600190565b81810381811115610a6457610a646114e9565b83815260406020820152816040820152818360608301376000818301606090810191909152601f909201601f1916010192915050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600060018201611734576117346114e9565b5060010190565b8082028115828204841417610a6457610a646114e9565b60008261176f57634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220cf201393ca7b57f4ab1cdad52a15f9326d5afc42b83a00a391ae8d4a15e90a2464736f6c63430008130033";

type ResolverRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ResolverRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ResolverRegistry__factory extends ContractFactory {
  constructor(...args: ResolverRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ResolverRegistry & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ResolverRegistry__factory {
    return super.connect(runner) as ResolverRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ResolverRegistryInterface {
    return new Interface(_abi) as ResolverRegistryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ResolverRegistry {
    return new Contract(address, _abi, runner) as unknown as ResolverRegistry;
  }
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  PartialFillManager,
  PartialFillManagerInterface,
} from "../../contracts/PartialFillManager";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "startPrice",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "reservePrice",
        type: "uint256",
      },
    ],
    name: "AuctionStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "resolver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "bidPrice",
        type: "uint256",
      },
    ],
    name: "BidPlaced",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "resolver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FillOrderExecuted",
    type: "event",
  },
  {
    inputs: [],
    name: "AUCTION_DURATION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIN_BID_INCREMENT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "auctions",
    outputs: [
      {
        internalType: "uint256",
        name: "startPrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reservePrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "currentPrice",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "active",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
    ],
    name: "executeFillOrders",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "fillOrders",
    outputs: [
      {
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "resolver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "bidPrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "merkleRoot",
        type: "bytes32",
      },
      {
        internalType: "bool",
        name: "executed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
    ],
    name: "getCurrentPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
    ],
    name: "getFillOrders",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "swapId",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "resolver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "bidPrice",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "merkleRoot",
            type: "bytes32",
          },
          {
            internalType: "bool",
            name: "executed",
            type: "bool",
          },
        ],
        internalType: "struct IPartialFill.FillOrder[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "bidPrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "fillAmount",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "placeBid",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "resolverBids",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "swapId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "startPrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reservePrice",
        type: "uint256",
      },
    ],
    name: "startAuction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610e14806100206000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c806371943bce1161006657806371943bce146101a5578063a271e525146101ad578063bcbfe4a6146101b6578063d135175314610208578063d919da901461021b57600080fd5b8063161e444e146100a35780631edbc5be146100c957806324a224e91461013f57806359ec70a11461017d5780636c57af5614610192575b600080fd5b6100b66100b1366004610b7a565b61023b565b6040519081526020015b60405180910390f35b6101106100d7366004610b7a565b60016020819052600091825260409091208054918101546002820154600383015460048401546005909401549293919290919060ff1686565b6040805196875260208701959095529385019290925260608401526080830152151560a082015260c0016100c0565b61016d61014d366004610b93565b600260209081526000928352604080842090915290825290205460ff1681565b60405190151581526020016100c0565b61019061018b366004610bcf565b6102d1565b005b6101906101a0366004610b7a565b610686565b6100b6606481565b6100b661012c81565b6101c96101c4366004610c5f565b6108b9565b604080519788526001600160a01b039096166020880152948601939093526060850191909152608084015260a0830152151560c082015260e0016100c0565b610190610216366004610c81565b610920565b61022e610229366004610b7a565b610a2c565b6040516100c09190610cad565b6000818152600160205260408120600581015460ff1661025e5750600092915050565b60008160020154426102709190610d50565b90508160030154811061028857506001015492915050565b6000826003015482846001015485600001546102a49190610d50565b6102ae9190610d63565b6102b89190610d7a565b83549091506102c8908290610d50565b95945050505050565b6000858152600160205260409020600581015460ff1661032c5760405162461bcd60e51b815260206004820152601160248201527027379030b1ba34bb329030bab1ba34b7b760791b60448201526064015b60405180910390fd5b806003015481600201546103409190610d9c565b42106103805760405162461bcd60e51b815260206004820152600f60248201526e105d58dd1a5bdb88195e1c1a5c9959608a1b6044820152606401610323565b6103898661023b565b8510156103d85760405162461bcd60e51b815260206004820152601760248201527f4269642062656c6f772063757272656e742070726963650000000000000000006044820152606401610323565b600086815260026020908152604080832033845290915290205460ff16156104305760405162461bcd60e51b815260206004820152600b60248201526a105b1c9958591e48189a5960aa1b6044820152606401610323565b6040516bffffffffffffffffffffffff193360601b166020820152603481018590526000906054016040516020818303038152906040528051906020012090506104b08484808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152505085549150849050610ae3565b6104ec5760405162461bcd60e51b815260206004820152600d60248201526c24b73b30b634b210383937b7b360991b6044820152606401610323565b6001600260008981526020019081526020016000206000336001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a81548160ff0219169083151502179055506000808881526020019081526020016000206040518060e00160405280898152602001336001600160a01b031681526020018781526020018881526020014281526020016000801b81526020016000151581525090806001815401808255809150506001900390600052602060002090600702016000909190919091506000820151816000015560208201518160010160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060408201518160020155606082015181600301556080820151816004015560a0820151816005015560c08201518160060160006101000a81548160ff0219169083151502179055505050336001600160a01b0316877f96d59693caec7bfbd896ccf6bb677a3b2230fec3c76d4b1b482a8670996c7c668860405161067591815260200190565b60405180910390a350505050505050565b6000818152600160205260409020600581015460ff166106dc5760405162461bcd60e51b815260206004820152601160248201527027379030b1ba34bb329030bab1ba34b7b760791b6044820152606401610323565b806003015481600201546106f09190610d9c565b4210156107365760405162461bcd60e51b815260206004820152601460248201527341756374696f6e207374696c6c2061637469766560601b6044820152606401610323565b6000828152602081905260408120905b8154811080156107565750600a81105b156108a95781818154811061076d5761076d610daf565b600091825260209091206006600790920201015460ff161580156107b8575082600101548282815481106107a3576107a3610daf565b90600052602060002090600702016003015410155b156108975760018282815481106107d1576107d1610daf565b906000526020600020906007020160060160006101000a81548160ff02191690831515021790555081818154811061080b5761080b610daf565b906000526020600020906007020160010160009054906101000a90046001600160a01b03166001600160a01b0316847fb5d6d0d018930c57239cc63196c2f884c2b3ba95b9bc9745e68fc3c620855cc584848154811061086d5761086d610daf565b90600052602060002090600702016002015460405161088e91815260200190565b60405180910390a35b806108a181610dc5565b915050610746565b5050600501805460ff1916905550565b600060205281600052604060002081815481106108d557600080fd5b600091825260209091206007909102018054600182015460028301546003840154600485015460058601546006909601549497506001600160a01b0390931695509093909260ff1687565b60008381526001602052604090206005015460ff161561097b5760405162461bcd60e51b815260206004820152601660248201527541756374696f6e20616c72656164792061637469766560501b6044820152606401610323565b6040805160c08101825283815260208082018481524283850190815261012c6060850190815260808501888152600160a0870181815260008c81528288528990209751885594519087015591516002860155516003850155516004840155516005909201805460ff191692151592909217909155815184815290810183905284917f0ce217feb50009b9d23ac12d250c75804a524a88961e29fed41999b5681e00a8910160405180910390a2505050565b600081815260208181526040808320805482518185028101850190935280835260609492939192909184015b82821015610ad85760008481526020908190206040805160e08101825260078602909201805483526001808201546001600160a01b0316848601526002820154928401929092526003810154606084015260048101546080840152600581015460a08401526006015460ff16151560c08301529083529092019101610a58565b505050509050919050565b600082610af08584610af9565b14949350505050565b600081815b8451811015610b3e57610b2a82868381518110610b1d57610b1d610daf565b6020026020010151610b48565b915080610b3681610dc5565b915050610afe565b5090505b92915050565b6000818310610b64576000828152602084905260409020610b73565b60008381526020839052604090205b9392505050565b600060208284031215610b8c57600080fd5b5035919050565b60008060408385031215610ba657600080fd5b8235915060208301356001600160a01b0381168114610bc457600080fd5b809150509250929050565b600080600080600060808688031215610be757600080fd5b853594506020860135935060408601359250606086013567ffffffffffffffff80821115610c1457600080fd5b818801915088601f830112610c2857600080fd5b813581811115610c3757600080fd5b8960208260051b8501011115610c4c57600080fd5b9699959850939650602001949392505050565b60008060408385031215610c7257600080fd5b50508035926020909101359150565b600080600060608486031215610c9657600080fd5b505081359360208301359350604090920135919050565b602080825282518282018190526000919060409081850190868401855b82811015610d2d57815180518552868101516001600160a01b0316878601528581015186860152606080820151908601526080808201519086015260a0808201519086015260c09081015115159085015260e09093019290850190600101610cca565b5091979650505050505050565b634e487b7160e01b600052601160045260246000fd5b81810381811115610b4257610b42610d3a565b8082028115828204841417610b4257610b42610d3a565b600082610d9757634e487b7160e01b600052601260045260246000fd5b500490565b80820180821115610b4257610b42610d3a565b634e487b7160e01b600052603260045260246000fd5b600060018201610dd757610dd7610d3a565b506001019056fea264697066735822122018d1e836d2bfff5fe6c9123a4b5f544437f89b8673c8eee8d6428c624e04e1a564736f6c63430008130033";

type PartialFillManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PartialFillManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PartialFillManager__factory extends ContractFactory {
  constructor(...args: PartialFillManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      PartialFillManager & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PartialFillManager__factory {
    return super.connect(runner) as PartialFillManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PartialFillManagerInterface {
    return new Interface(_abi) as PartialFillManagerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): PartialFillManager {
    return new Contract(address, _abi, runner) as unknown as PartialFillManager;
  }
}
